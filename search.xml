<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[HTTP响应码]]></title>
    <url>%2F2019%2F08%2F05%2FHTTP%E5%93%8D%E5%BA%94%E7%A0%81%2F</url>
    <content type="text"><![CDATA[响应码由三位十进制数字组成，它们出现在由HTTP服务器发送的响应的第一行。 响应码分五种类型，由它们的第一位数字表示：1xx：（临时响应）表示临时响应并需要请求者继续执行操作的状态代码。 100 :(继续)请求者应当继续提出请求。服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。 101:(切换协议)请求者已要求服务器切换协议，服务器已确认并准备切换。 2xx：（成功）行为被成功地接受、理解和采纳 200 （成功）服务器已成功处理了请求。通常，这表示服务器提供了请求的网页。对GET和POST请求的应答文档跟在后面。 201 （已创建）请求成功并且服务器创建了新的资源。Location头给出了它的URL。 202 （已接受）服务器已接受请求，但尚未处理。 203 （非授权信息）服务器已成功处理了请求，但返回的信息可能来自另一来源。一些应答头可能不正确，因为使用的是文档的拷贝 204 （无内容）没有新文档，浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。 205 （重置内容）没有新的内容，但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容。 206 （部分内容）服务器成功处理了部分 GET 请求。 3xx：(重定向)为了完成请求，必须进一步执行的动作 。通常，这些状态代码用来重定向。 300 （多种选择）针对请求，服务器可执行多种操作。服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。如果服务器要提出优先选择，则应该在Location应答头指明。 301 （永久移动）请求的网页已永久移动到新位置。新的URL在Location头中给出，服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。 302 （临时移动）类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。 303 （查看其他位置）类似于301/302，不同之处在于，如果原来的请求是POST，Location头指定的重定向目标文档应该通过GET提取。 304 （未修改）客户端有缓冲的文档并发出了一个条件性的请求（一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档）。自从上次请求后，请求的网页未修改过。服务器告诉客户，原来缓冲的文档还可以继续使用。服务器返回此响应时，不会返回网页内容。 305 （使用代理）客户请求的文档应该通过Location头所指明的代理服务器提取。 307 （临时重定向）和302相同。许多浏览器会错误地响应302应答进行重定向，即使原来的请求是POST，即使它实际上只能在POST请求的应答是303时 才能重定向。由于这个原因，HTTP 1.1新增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向的GET和POST请求；如果是307应答，则浏览器只 能跟随对GET请求的重定向。（HTTP 1.1新） 4xx：(请求错误)客户端错误，请求包含语法错误或者请求无法实现 400 （错误请求）服务器不理解请求的语法。 401 （未授权）请求要求身份验证。对于需要登录的网页，服务器可能返回此响应。 403 （禁止）资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致。 404 （未找到）服务器找不到请求的网页。 405 （方法禁用）禁用请求中指定的方法。 406 （不接受）指定的资源已经找到，但它的MIME类型和客户在Accpet头中所指定的不兼容 407 （需要代理授权）此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。 408 （请求超时） 在服务器许可的等待时间内，客户一直没有发出任何请求。客户可以在以后重复同一请求。 409 （冲突）服务器在完成请求时发生冲突。通常和PUT请求有关。由于请求和资源的当前状态相冲突，因此请求不能成功。服务器必须在响应中包含有关冲突的信息。 410 （已删除）所请求的文档已经不再可用，而且服务器不知道应该重定向到哪一个地址。它和404的不同在于，返回410表示文档永久地离开了指定的位置，而404表示由于未知的原因文档不可用。 411 （需要有效长度）服务器不接受不含有效内容长度标头字段的请求。 412 （未满足前提条件）请求头中指定的一些前提条件失败 413 （请求实体过大）目标文档的大小超过服务器当前愿意处理的大小。如果服务器认为自己能够稍后再处理该请求，则应该提供一个Retry-After头 414 （请求的 URI 过长）请求的 URI（通常为网址）过长，服务器无法处理。 415 （不支持的媒体类型）请求的格式不受请求页面的支持。 416 （请求范围不符合要求）服务器不能满足客户在请求中指定的Range头。 417 （未满足期望值）服务器未满足”期望”请求标头字段的要求。 5xx：(服务器错误)服务器不能实现一种明显无效的请求,这些状态代码表示服务器在尝试处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。 500 （服务器内部错误）服务器遇到错误，无法完成请求。 501 （尚未实施）服务器不具备完成请求的功能。例如，服务器无法识别请求方法时可能会返回此代码。 502 （错误网关）服务器作为网关或代理，从上游服务器收到无效响应。 503 （服务不可用）服务器目前无法使用（由于超载或停机维护）。通常，这只是暂时状态。 504 （网关超时）服务器作为网关或代理，但是没有及时从上游服务器收到请求。 505 （HTTP 版本不受支持）服务器不支持请求中所用的 HTTP 协议版本。]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F02%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
